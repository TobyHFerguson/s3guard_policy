* Prevent Invalid Modification of S3Guard Managed Folders
The script =create_s3_guard_policy.sh= will, given the name of an
existing cluster (dataware or dataeng) and an s3 bucket/folder
reference (neither the bucker nor the folder need exist), provide an
s3 bucket policy which will limit the modification of objects placed
in that folder to only the IAM instance profile of the given cluster.

The purpose of this policy is to greatly reduce the chance of someone
changing the objects that S3Guard is managing.
* Execution
To create a policy that will ensure that only the IAM role associated
with CLUSTER is able to modify the FOLDER in BUCKET one can:

- run the script directly (assuming you have the AWS and Altus CLIs installed)
#+BEGIN_SRC 
./create_s3_guard_policy.sh CLUSTER s3a://BUCKET/FOLDER
#+END_SRC
- Otherwise run the script using a docker image, either directly:
#+BEGIN_SRC sh
docker run -t -i --rm --read-only -v /tmp -v $HOME/.aws:/root/.aws:ro -v $HOME/.altus:/root/.altus:ro tobyhferguson/s3guard_policy:latest CLUSTER s3a://BUCKET/FOLDER
#+END_SRC
- using the helper script =dr_create_s3_guard_policy.sh=

Note that we mount the file-system readonly, including the bind volumes, except for the /tmp volume, which must be read/write for the here documents in the underlying shell script.
* Prerequisites
We assume that:
- the AWS is [[https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html][installed]] and [[https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html][configured]];
- the Altus Client is [[https://www.cloudera.com/documentation/altus/topics/alt_client_setup.html][setup]];
- Optional. Docker is [[https://docs.docker.com/install/][installed]].
* Installation
- If running directly, install =create_s3_guard_policy.sh= as an executable on your PATH
- If running via docker, optionally install =dr_create_s3_guard_policy.sh= as an executable on your PATH
